name: "Build Linux App"
on:
  workflow_dispatch:
    # This allows manual triggering from the GitHub Actions tab

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Wails Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libglib2.0-dev \
            libglib2.0-bin \
            libgdk-pixbuf2.0-dev \
            libgirepository1.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            libatk1.0-dev \
            libatk-bridge2.0-dev \
            libx11-dev \
            libxcomposite-dev \
            libxcursor-dev \
            libxdamage-dev \
            libxext-dev \
            libxfixes-dev \
            libxi-dev \
            libxrandr-dev \
            libxrender-dev \
            libxtst-dev \
            libnss3 \
            libasound2t64 \
            upx-ucl

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      # - name: Install frontend dependencies
      #   working-directory: frontend
      #   run: |
      #     pnpm install --no-frozen-lockfile

      - name: Clean build directory
        run: |
          rm -rf build/bin/linux
          mkdir -p build/bin/linux

      - name: Build Wails application (amd64)
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: |
          wails build -platform linux/amd64 -upx -clean
          if [ -f "build/bin/TridUI" ]; then
            cp "build/bin/TridUI" "build/bin/linux/TridUI-amd64"
            chmod +x "build/bin/linux/TridUI-amd64"
          fi

      - name: Build Wails application (arm64)
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: |
          wails build -platform linux/arm64 -upx -clean
          if [ -f "build/bin/TridUI" ]; then
            cp "build/bin/TridUI" "build/bin/linux/TridUI-arm64"
            chmod +x "build/bin/linux/TridUI-arm64"
          fi

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: TridUI-linux
          path: build/bin/linux/*
          retention-days: 7
